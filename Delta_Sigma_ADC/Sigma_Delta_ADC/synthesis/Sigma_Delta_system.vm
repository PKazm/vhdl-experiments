//
// Written by Synplify Pro 
// Product Version "N-2018.03M-SP1-1"
// Program "Synplify Pro", Mapper "mapact, Build 2461R"
// Wed Jan 29 15:16:53 2020
//
// Source file index table:
// Object locations will have the form <file>:<line>
// file 0 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\vhd2008\std.vhd "
// file 1 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\vhd\snps_haps_pkg.vhd "
// file 2 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\vhd2008\std1164.vhd "
// file 3 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\vhd2008\std_textio.vhd "
// file 4 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\vhd2008\numeric.vhd "
// file 5 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\vhd\umr_capim.vhd "
// file 6 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\vhd2008\arith.vhd "
// file 7 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\vhd2008\unsigned.vhd "
// file 8 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\vhd\hyperents.vhd "
// file 9 "\c:\users\phoenix136\dropbox\fpga\microsemi\sigma_delta_adc\hdl\averaging_filter.vhd "
// file 10 "\c:\users\phoenix136\dropbox\fpga\microsemi\sigma_delta_adc\hdl\timer.vhd "
// file 11 "\c:\users\phoenix136\dropbox\fpga\microsemi\sigma_delta_adc\hdl\sigma_delta_lvds_adc.vhd "
// file 12 "\c:\users\phoenix136\dropbox\fpga\microsemi\sigma_delta_adc\component\work\sigma_delta_system\sigma_delta_system.vhd "
// file 13 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\generic\smartfusion2.vhd "
// file 14 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\nlconst.dat "
// file 15 "\c:\users\phoenix136\dropbox\fpga\microsemi\sigma_delta_adc\designer\sigma_delta_system\synthesis.fdc "

`timescale 100 ps/100 ps
module Averaging_Filter (
  Data_out_c,
  Sigma_Delta_LVDS_ADC_0_Data_out_1,
  Sigma_Delta_LVDS_ADC_0_Data_Ready,
  Data_out_ready_c,
  PCLK_c,
  RSTn_c
)
;
output [15:0] Data_out_c ;
input [15:0] Sigma_Delta_LVDS_ADC_0_Data_out_1 ;
input Sigma_Delta_LVDS_ADC_0_Data_Ready ;
output Data_out_ready_c ;
input PCLK_c ;
input RSTn_c ;
wire Sigma_Delta_LVDS_ADC_0_Data_Ready ;
wire Data_out_ready_c ;
wire PCLK_c ;
wire RSTn_c ;
wire [15:0] samples_mem_0;
wire [1:0] filter_state;
wire [15:0] samples_mem_1;
wire [16:0] running_sum;
wire [8:8] samples_mem_1_RNIQNKT5_S;
wire [9:9] samples_mem_1_RNIF6BI6_S;
wire [10:10] samples_mem_1_RNISIJT7_S;
wire [11:11] samples_mem_1_RNIC2S89_S;
wire [12:12] samples_mem_1_RNIVK4KA_S;
wire [13:13] samples_mem_1_RNILADVB_S;
wire [14:14] samples_mem_1_RNIE3MAD_S;
wire [15:15] samples_mem_1_RNIAVULE_S;
wire [16:16] running_sum_RNO_S;
wire [0:0] running_sum_RNIUH4O_S;
wire [1:1] samples_mem_1_RNIR7QC1_S;
wire [2:2] samples_mem_1_RNIR0G12_S;
wire [3:3] samples_mem_1_RNIUS5M2_S;
wire [4:4] samples_mem_1_RNI4SRA3_S;
wire [5:5] samples_mem_1_RNIDUHV3_S;
wire [6:6] samples_mem_1_RNIP38K4_S;
wire [7:7] samples_mem_1_RNI8CU85_S;
wire [0:0] filter_state_ns;
wire [0:0] filter_state_RNI4VE3_S;
wire [0:0] filter_state_RNI4VE3_Y;
wire [0:0] running_sum_RNIUH4O_Y;
wire [1:1] samples_mem_1_RNIR7QC1_Y;
wire [2:2] samples_mem_1_RNIR0G12_Y;
wire [3:3] samples_mem_1_RNIUS5M2_Y;
wire [4:4] samples_mem_1_RNI4SRA3_Y;
wire [5:5] samples_mem_1_RNIDUHV3_Y;
wire [6:6] samples_mem_1_RNIP38K4_Y;
wire [7:7] samples_mem_1_RNI8CU85_Y;
wire [8:8] samples_mem_1_RNIQNKT5_Y;
wire [9:9] samples_mem_1_RNIF6BI6_Y;
wire [10:10] samples_mem_1_RNISIJT7_Y;
wire [11:11] samples_mem_1_RNIC2S89_Y;
wire [12:12] samples_mem_1_RNIVK4KA_Y;
wire [13:13] samples_mem_1_RNILADVB_Y;
wire [14:14] samples_mem_1_RNIE3MAD_Y;
wire [16:16] running_sum_RNO_FCO;
wire [16:16] running_sum_RNO_Y;
wire [15:15] samples_mem_1_RNIAVULE_Y;
wire VCC ;
wire GND ;
wire N_24_i ;
wire Data_out_ready_sige_0 ;
wire data_in_ready_last_Z ;
wire un1_running_sum_1_cry_0_cy ;
wire un1_running_sum_1_cry_0 ;
wire un1_running_sum_1_cry_1 ;
wire un1_running_sum_1_cry_2 ;
wire un1_running_sum_1_cry_3 ;
wire un1_running_sum_1_cry_4 ;
wire un1_running_sum_1_cry_5 ;
wire un1_running_sum_1_cry_6 ;
wire un1_running_sum_1_cry_7 ;
wire un1_running_sum_1_cry_8 ;
wire un1_running_sum_1_cry_9 ;
wire un1_running_sum_1_cry_10 ;
wire un1_running_sum_1_cry_11 ;
wire un1_running_sum_1_cry_12 ;
wire un1_running_sum_1_cry_13 ;
wire un1_running_sum_1_cry_14 ;
wire un1_running_sum_1_cry_15 ;
wire un6_data_in_ready_last_i ;
wire N_3 ;
wire N_2 ;
wire N_1 ;
// @9:72
  SLE \samples_mem_0[5]  (
	.Q(samples_mem_0[5]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[5]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_0[6]  (
	.Q(samples_mem_0[6]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[6]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_0[7]  (
	.Q(samples_mem_0[7]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[7]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_0[8]  (
	.Q(samples_mem_0[8]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[8]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_0[9]  (
	.Q(samples_mem_0[9]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[9]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_0[10]  (
	.Q(samples_mem_0[10]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[10]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_0[11]  (
	.Q(samples_mem_0[11]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[11]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_0[12]  (
	.Q(samples_mem_0[12]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[12]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_0[13]  (
	.Q(samples_mem_0[13]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[13]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_0[14]  (
	.Q(samples_mem_0[14]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[14]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_0[15]  (
	.Q(samples_mem_0[15]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[15]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_1[6]  (
	.Q(samples_mem_1[6]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_0[6]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_1[7]  (
	.Q(samples_mem_1[7]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_0[7]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_1[8]  (
	.Q(samples_mem_1[8]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_0[8]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_1[9]  (
	.Q(samples_mem_1[9]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_0[9]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_1[10]  (
	.Q(samples_mem_1[10]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_0[10]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_1[11]  (
	.Q(samples_mem_1[11]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_0[11]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_1[12]  (
	.Q(samples_mem_1[12]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_0[12]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_1[13]  (
	.Q(samples_mem_1[13]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_0[13]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_1[14]  (
	.Q(samples_mem_1[14]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_0[14]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_1[15]  (
	.Q(samples_mem_1[15]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_0[15]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_0[0]  (
	.Q(samples_mem_0[0]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[0]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_0[1]  (
	.Q(samples_mem_0[1]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[1]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_0[2]  (
	.Q(samples_mem_0[2]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[2]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_0[3]  (
	.Q(samples_mem_0[3]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[3]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_0[4]  (
	.Q(samples_mem_0[4]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[4]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \running_sum[8]  (
	.Q(running_sum[8]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_1_RNIQNKT5_S[8]),
	.EN(N_24_i),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \running_sum[9]  (
	.Q(running_sum[9]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_1_RNIF6BI6_S[9]),
	.EN(N_24_i),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \running_sum[10]  (
	.Q(running_sum[10]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_1_RNISIJT7_S[10]),
	.EN(N_24_i),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \running_sum[11]  (
	.Q(running_sum[11]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_1_RNIC2S89_S[11]),
	.EN(N_24_i),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \running_sum[12]  (
	.Q(running_sum[12]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_1_RNIVK4KA_S[12]),
	.EN(N_24_i),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \running_sum[13]  (
	.Q(running_sum[13]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_1_RNILADVB_S[13]),
	.EN(N_24_i),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \running_sum[14]  (
	.Q(running_sum[14]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_1_RNIE3MAD_S[14]),
	.EN(N_24_i),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \running_sum[15]  (
	.Q(running_sum[15]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_1_RNIAVULE_S[15]),
	.EN(N_24_i),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \running_sum[16]  (
	.Q(running_sum[16]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(running_sum_RNO_S[16]),
	.EN(N_24_i),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_1[0]  (
	.Q(samples_mem_1[0]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_0[0]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_1[1]  (
	.Q(samples_mem_1[1]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_0[1]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_1[2]  (
	.Q(samples_mem_1[2]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_0[2]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_1[3]  (
	.Q(samples_mem_1[3]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_0[3]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_1[4]  (
	.Q(samples_mem_1[4]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_0[4]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \samples_mem_1[5]  (
	.Q(samples_mem_1[5]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_0[5]),
	.EN(filter_state[0]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \filtered_value[9]  (
	.Q(Data_out_c[9]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(running_sum[10]),
	.EN(filter_state[1]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \filtered_value[10]  (
	.Q(Data_out_c[10]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(running_sum[11]),
	.EN(filter_state[1]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \filtered_value[11]  (
	.Q(Data_out_c[11]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(running_sum[12]),
	.EN(filter_state[1]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \filtered_value[12]  (
	.Q(Data_out_c[12]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(running_sum[13]),
	.EN(filter_state[1]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \filtered_value[13]  (
	.Q(Data_out_c[13]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(running_sum[14]),
	.EN(filter_state[1]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \filtered_value[14]  (
	.Q(Data_out_c[14]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(running_sum[15]),
	.EN(filter_state[1]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \filtered_value[15]  (
	.Q(Data_out_c[15]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(running_sum[16]),
	.EN(filter_state[1]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \running_sum[0]  (
	.Q(running_sum[0]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(running_sum_RNIUH4O_S[0]),
	.EN(N_24_i),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \running_sum[1]  (
	.Q(running_sum[1]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_1_RNIR7QC1_S[1]),
	.EN(N_24_i),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \running_sum[2]  (
	.Q(running_sum[2]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_1_RNIR0G12_S[2]),
	.EN(N_24_i),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \running_sum[3]  (
	.Q(running_sum[3]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_1_RNIUS5M2_S[3]),
	.EN(N_24_i),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \running_sum[4]  (
	.Q(running_sum[4]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_1_RNI4SRA3_S[4]),
	.EN(N_24_i),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \running_sum[5]  (
	.Q(running_sum[5]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_1_RNIDUHV3_S[5]),
	.EN(N_24_i),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \running_sum[6]  (
	.Q(running_sum[6]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_1_RNIP38K4_S[6]),
	.EN(N_24_i),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \running_sum[7]  (
	.Q(running_sum[7]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(samples_mem_1_RNI8CU85_S[7]),
	.EN(N_24_i),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \filtered_value[0]  (
	.Q(Data_out_c[0]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(running_sum[1]),
	.EN(filter_state[1]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \filtered_value[1]  (
	.Q(Data_out_c[1]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(running_sum[2]),
	.EN(filter_state[1]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \filtered_value[2]  (
	.Q(Data_out_c[2]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(running_sum[3]),
	.EN(filter_state[1]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \filtered_value[3]  (
	.Q(Data_out_c[3]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(running_sum[4]),
	.EN(filter_state[1]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \filtered_value[4]  (
	.Q(Data_out_c[4]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(running_sum[5]),
	.EN(filter_state[1]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \filtered_value[5]  (
	.Q(Data_out_c[5]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(running_sum[6]),
	.EN(filter_state[1]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \filtered_value[6]  (
	.Q(Data_out_c[6]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(running_sum[7]),
	.EN(filter_state[1]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \filtered_value[7]  (
	.Q(Data_out_c[7]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(running_sum[8]),
	.EN(filter_state[1]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \filtered_value[8]  (
	.Q(Data_out_c[8]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(running_sum[9]),
	.EN(filter_state[1]),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \filter_state[0]  (
	.Q(filter_state[0]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(filter_state_ns[0]),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE \filter_state[1]  (
	.Q(filter_state[1]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(filter_state[0]),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  SLE Data_out_ready_sig (
	.Q(Data_out_ready_c),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(Data_out_ready_sige_0),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:62
  SLE data_in_ready_last (
	.Q(data_in_ready_last_Z),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(Sigma_Delta_LVDS_ADC_0_Data_Ready),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @9:72
  ARI1 \filter_state_RNI4VE3[0]  (
	.FCO(un1_running_sum_1_cry_0_cy),
	.S(filter_state_RNI4VE3_S[0]),
	.Y(filter_state_RNI4VE3_Y[0]),
	.B(filter_state[0]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(VCC)
);
defparam \filter_state_RNI4VE3[0] .INIT=20'h45500;
// @9:72
  ARI1 \running_sum_RNIUH4O[0]  (
	.FCO(un1_running_sum_1_cry_0),
	.S(running_sum_RNIUH4O_S[0]),
	.Y(running_sum_RNIUH4O_Y[0]),
	.B(filter_state[0]),
	.C(samples_mem_1[0]),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[0]),
	.A(running_sum[0]),
	.FCI(un1_running_sum_1_cry_0_cy)
);
defparam \running_sum_RNIUH4O[0] .INIT=20'h54EB1;
// @9:72
  ARI1 \samples_mem_1_RNIR7QC1[1]  (
	.FCO(un1_running_sum_1_cry_1),
	.S(samples_mem_1_RNIR7QC1_S[1]),
	.Y(samples_mem_1_RNIR7QC1_Y[1]),
	.B(filter_state[0]),
	.C(samples_mem_1[1]),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[1]),
	.A(running_sum[1]),
	.FCI(un1_running_sum_1_cry_0)
);
defparam \samples_mem_1_RNIR7QC1[1] .INIT=20'h54EB1;
// @9:72
  ARI1 \samples_mem_1_RNIR0G12[2]  (
	.FCO(un1_running_sum_1_cry_2),
	.S(samples_mem_1_RNIR0G12_S[2]),
	.Y(samples_mem_1_RNIR0G12_Y[2]),
	.B(filter_state[0]),
	.C(samples_mem_1[2]),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[2]),
	.A(running_sum[2]),
	.FCI(un1_running_sum_1_cry_1)
);
defparam \samples_mem_1_RNIR0G12[2] .INIT=20'h54EB1;
// @9:72
  ARI1 \samples_mem_1_RNIUS5M2[3]  (
	.FCO(un1_running_sum_1_cry_3),
	.S(samples_mem_1_RNIUS5M2_S[3]),
	.Y(samples_mem_1_RNIUS5M2_Y[3]),
	.B(filter_state[0]),
	.C(samples_mem_1[3]),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[3]),
	.A(running_sum[3]),
	.FCI(un1_running_sum_1_cry_2)
);
defparam \samples_mem_1_RNIUS5M2[3] .INIT=20'h54EB1;
// @9:72
  ARI1 \samples_mem_1_RNI4SRA3[4]  (
	.FCO(un1_running_sum_1_cry_4),
	.S(samples_mem_1_RNI4SRA3_S[4]),
	.Y(samples_mem_1_RNI4SRA3_Y[4]),
	.B(filter_state[0]),
	.C(samples_mem_1[4]),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[4]),
	.A(running_sum[4]),
	.FCI(un1_running_sum_1_cry_3)
);
defparam \samples_mem_1_RNI4SRA3[4] .INIT=20'h54EB1;
// @9:72
  ARI1 \samples_mem_1_RNIDUHV3[5]  (
	.FCO(un1_running_sum_1_cry_5),
	.S(samples_mem_1_RNIDUHV3_S[5]),
	.Y(samples_mem_1_RNIDUHV3_Y[5]),
	.B(filter_state[0]),
	.C(samples_mem_1[5]),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[5]),
	.A(running_sum[5]),
	.FCI(un1_running_sum_1_cry_4)
);
defparam \samples_mem_1_RNIDUHV3[5] .INIT=20'h54EB1;
// @9:72
  ARI1 \samples_mem_1_RNIP38K4[6]  (
	.FCO(un1_running_sum_1_cry_6),
	.S(samples_mem_1_RNIP38K4_S[6]),
	.Y(samples_mem_1_RNIP38K4_Y[6]),
	.B(filter_state[0]),
	.C(samples_mem_1[6]),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[6]),
	.A(running_sum[6]),
	.FCI(un1_running_sum_1_cry_5)
);
defparam \samples_mem_1_RNIP38K4[6] .INIT=20'h54EB1;
// @9:72
  ARI1 \samples_mem_1_RNI8CU85[7]  (
	.FCO(un1_running_sum_1_cry_7),
	.S(samples_mem_1_RNI8CU85_S[7]),
	.Y(samples_mem_1_RNI8CU85_Y[7]),
	.B(filter_state[0]),
	.C(samples_mem_1[7]),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[7]),
	.A(running_sum[7]),
	.FCI(un1_running_sum_1_cry_6)
);
defparam \samples_mem_1_RNI8CU85[7] .INIT=20'h54EB1;
// @9:72
  ARI1 \samples_mem_1_RNIQNKT5[8]  (
	.FCO(un1_running_sum_1_cry_8),
	.S(samples_mem_1_RNIQNKT5_S[8]),
	.Y(samples_mem_1_RNIQNKT5_Y[8]),
	.B(filter_state[0]),
	.C(samples_mem_1[8]),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[8]),
	.A(running_sum[8]),
	.FCI(un1_running_sum_1_cry_7)
);
defparam \samples_mem_1_RNIQNKT5[8] .INIT=20'h54EB1;
// @9:72
  ARI1 \samples_mem_1_RNIF6BI6[9]  (
	.FCO(un1_running_sum_1_cry_9),
	.S(samples_mem_1_RNIF6BI6_S[9]),
	.Y(samples_mem_1_RNIF6BI6_Y[9]),
	.B(filter_state[0]),
	.C(samples_mem_1[9]),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[9]),
	.A(running_sum[9]),
	.FCI(un1_running_sum_1_cry_8)
);
defparam \samples_mem_1_RNIF6BI6[9] .INIT=20'h54EB1;
// @9:72
  ARI1 \samples_mem_1_RNISIJT7[10]  (
	.FCO(un1_running_sum_1_cry_10),
	.S(samples_mem_1_RNISIJT7_S[10]),
	.Y(samples_mem_1_RNISIJT7_Y[10]),
	.B(filter_state[0]),
	.C(samples_mem_1[10]),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[10]),
	.A(running_sum[10]),
	.FCI(un1_running_sum_1_cry_9)
);
defparam \samples_mem_1_RNISIJT7[10] .INIT=20'h54EB1;
// @9:72
  ARI1 \samples_mem_1_RNIC2S89[11]  (
	.FCO(un1_running_sum_1_cry_11),
	.S(samples_mem_1_RNIC2S89_S[11]),
	.Y(samples_mem_1_RNIC2S89_Y[11]),
	.B(filter_state[0]),
	.C(samples_mem_1[11]),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[11]),
	.A(running_sum[11]),
	.FCI(un1_running_sum_1_cry_10)
);
defparam \samples_mem_1_RNIC2S89[11] .INIT=20'h54EB1;
// @9:72
  ARI1 \samples_mem_1_RNIVK4KA[12]  (
	.FCO(un1_running_sum_1_cry_12),
	.S(samples_mem_1_RNIVK4KA_S[12]),
	.Y(samples_mem_1_RNIVK4KA_Y[12]),
	.B(filter_state[0]),
	.C(samples_mem_1[12]),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[12]),
	.A(running_sum[12]),
	.FCI(un1_running_sum_1_cry_11)
);
defparam \samples_mem_1_RNIVK4KA[12] .INIT=20'h54EB1;
// @9:72
  ARI1 \samples_mem_1_RNILADVB[13]  (
	.FCO(un1_running_sum_1_cry_13),
	.S(samples_mem_1_RNILADVB_S[13]),
	.Y(samples_mem_1_RNILADVB_Y[13]),
	.B(filter_state[0]),
	.C(samples_mem_1[13]),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[13]),
	.A(running_sum[13]),
	.FCI(un1_running_sum_1_cry_12)
);
defparam \samples_mem_1_RNILADVB[13] .INIT=20'h54EB1;
// @9:72
  ARI1 \samples_mem_1_RNIE3MAD[14]  (
	.FCO(un1_running_sum_1_cry_14),
	.S(samples_mem_1_RNIE3MAD_S[14]),
	.Y(samples_mem_1_RNIE3MAD_Y[14]),
	.B(filter_state[0]),
	.C(samples_mem_1[14]),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[14]),
	.A(running_sum[14]),
	.FCI(un1_running_sum_1_cry_13)
);
defparam \samples_mem_1_RNIE3MAD[14] .INIT=20'h54EB1;
// @9:72
  ARI1 \running_sum_RNO[16]  (
	.FCO(running_sum_RNO_FCO[16]),
	.S(running_sum_RNO_S[16]),
	.Y(running_sum_RNO_Y[16]),
	.B(filter_state[0]),
	.C(running_sum[16]),
	.D(GND),
	.A(VCC),
	.FCI(un1_running_sum_1_cry_15)
);
defparam \running_sum_RNO[16] .INIT=20'h49900;
// @9:72
  ARI1 \samples_mem_1_RNIAVULE[15]  (
	.FCO(un1_running_sum_1_cry_15),
	.S(samples_mem_1_RNIAVULE_S[15]),
	.Y(samples_mem_1_RNIAVULE_Y[15]),
	.B(filter_state[0]),
	.C(samples_mem_1[15]),
	.D(Sigma_Delta_LVDS_ADC_0_Data_out_1[15]),
	.A(running_sum[15]),
	.FCI(un1_running_sum_1_cry_14)
);
defparam \samples_mem_1_RNIAVULE[15] .INIT=20'h54EB1;
// @9:72
  CFG3 Data_out_ready_sige (
	.A(un6_data_in_ready_last_i),
	.B(Data_out_ready_c),
	.C(filter_state[1]),
	.Y(Data_out_ready_sige_0)
);
defparam Data_out_ready_sige.INIT=8'hF4;
// @9:80
  CFG2 un6_data_in_ready_last (
	.A(Sigma_Delta_LVDS_ADC_0_Data_Ready),
	.B(data_in_ready_last_Z),
	.Y(un6_data_in_ready_last_i)
);
defparam un6_data_in_ready_last.INIT=4'h2;
// @9:72
  CFG3 \filter_state_ns_0_a2[0]  (
	.A(un6_data_in_ready_last_i),
	.B(filter_state[0]),
	.C(filter_state[1]),
	.Y(filter_state_ns[0])
);
defparam \filter_state_ns_0_a2[0] .INIT=8'h02;
// @9:72
  CFG2 un6_data_in_ready_last_RNI90M9 (
	.A(filter_state[0]),
	.B(un6_data_in_ready_last_i),
	.Y(N_24_i)
);
defparam un6_data_in_ready_last_RNI90M9.INIT=4'hE;
  GND GND_Z (
	.Y(GND)
);
  VCC VCC_Z (
	.Y(VCC)
);
endmodule /* Averaging_Filter */

module timer (
  sample_CLK,
  PCLK_c,
  RSTn_c
)
;
output sample_CLK ;
input PCLK_c ;
input RSTn_c ;
wire sample_CLK ;
wire PCLK_c ;
wire RSTn_c ;
wire timer_clock_out_sig_i_i ;
wire VCC ;
wire GND ;
wire N_1 ;
  CFG1 timer_clock_out_sig_RNO (
	.A(sample_CLK),
	.Y(timer_clock_out_sig_i_i)
);
defparam timer_clock_out_sig_RNO.INIT=2'h1;
// @10:24
  SLE timer_clock_out_sig (
	.Q(sample_CLK),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(timer_clock_out_sig_i_i),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
//@11:72
  GND GND_Z (
	.Y(GND)
);
  VCC VCC_Z (
	.Y(VCC)
);
endmodule /* timer */

module Sigma_Delta_LVDS_ADC (
  Sigma_Delta_LVDS_ADC_0_Data_out_1,
  Sigma_Delta_LVDS_ADC_0_Data_Ready,
  INBUF_DIFF_0_Y,
  LVDS_PADN_feedback_c,
  PCLK_c,
  RSTn_c
)
;
output [15:0] Sigma_Delta_LVDS_ADC_0_Data_out_1 ;
output Sigma_Delta_LVDS_ADC_0_Data_Ready ;
input INBUF_DIFF_0_Y ;
output LVDS_PADN_feedback_c ;
input PCLK_c ;
input RSTn_c ;
wire Sigma_Delta_LVDS_ADC_0_Data_Ready ;
wire INBUF_DIFF_0_Y ;
wire LVDS_PADN_feedback_c ;
wire PCLK_c ;
wire RSTn_c ;
wire [15:0] pwm_quantized_accumulator;
wire [15:0] pwm_quantized_accumulator_lm;
wire [15:0] pwm_counter;
wire [15:0] pwm_counter_s;
wire [0:0] pwm_counter_cry_cy_S;
wire [0:0] pwm_counter_cry_cy_Y;
wire [14:0] pwm_counter_cry;
wire [14:0] pwm_counter_cry_Y;
wire [15:15] pwm_counter_s_FCO;
wire [15:15] pwm_counter_s_Y;
wire [14:1] pwm_quantized_accumulator_cry;
wire [15:1] pwm_quantized_accumulator_s;
wire [14:1] pwm_quantized_accumulator_cry_Y;
wire [15:15] pwm_quantized_accumulator_s_FCO;
wire [15:15] pwm_quantized_accumulator_s_Y;
wire VCC ;
wire pwm_quantized_accumulator_0_sqmuxa_Z ;
wire GND ;
wire sample_CLK_last_Z ;
wire sample_CLK ;
wire pwm_quantized_accumulator_0_sqmuxa_i ;
wire pwm_quantized_accumulatore ;
wire pwm_counter_cry_cy ;
wire pwm_quantized_accumulator_s_20_FCO ;
wire pwm_quantized_accumulator_s_20_S ;
wire pwm_quantized_accumulator_s_20_Y ;
wire pwm_quantized_accumulator_0_sqmuxa_x_Z ;
wire un3_sample_clk_last ;
wire pwm_quantized_accumulator_0_sqmuxa_5_0_Z ;
wire pwm_quantized_accumulator_0_sqmuxa_4_0_Z ;
wire pwm_quantized_accumulator_0_sqmuxa_3_0_Z ;
wire pwm_quantized_accumulator_0_sqmuxa_2_0_Z ;
wire pwm_quantized_accumulator_0_sqmuxa_x_5_Z ;
wire pwm_quantized_accumulator_0_sqmuxa_x_4_Z ;
wire pwm_quantized_accumulator_0_sqmuxa_x_3_Z ;
wire pwm_quantized_accumulator_0_sqmuxa_x_2_Z ;
wire un13_sample_clk_last_11 ;
wire un13_sample_clk_last_10 ;
wire un13_sample_clk_last_9 ;
wire un13_sample_clk_last_8 ;
wire pwm_quantized_accumulator_0_sqmuxa_7_Z ;
wire un13_sample_clk_last ;
// @11:99
  SLE \pwm_quantized_value[5]  (
	.Q(Sigma_Delta_LVDS_ADC_0_Data_out_1[5]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator[5]),
	.EN(pwm_quantized_accumulator_0_sqmuxa_Z),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_value[6]  (
	.Q(Sigma_Delta_LVDS_ADC_0_Data_out_1[6]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator[6]),
	.EN(pwm_quantized_accumulator_0_sqmuxa_Z),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_value[7]  (
	.Q(Sigma_Delta_LVDS_ADC_0_Data_out_1[7]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator[7]),
	.EN(pwm_quantized_accumulator_0_sqmuxa_Z),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_value[8]  (
	.Q(Sigma_Delta_LVDS_ADC_0_Data_out_1[8]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator[8]),
	.EN(pwm_quantized_accumulator_0_sqmuxa_Z),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_value[9]  (
	.Q(Sigma_Delta_LVDS_ADC_0_Data_out_1[9]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator[9]),
	.EN(pwm_quantized_accumulator_0_sqmuxa_Z),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_value[10]  (
	.Q(Sigma_Delta_LVDS_ADC_0_Data_out_1[10]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator[10]),
	.EN(pwm_quantized_accumulator_0_sqmuxa_Z),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_value[11]  (
	.Q(Sigma_Delta_LVDS_ADC_0_Data_out_1[11]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator[11]),
	.EN(pwm_quantized_accumulator_0_sqmuxa_Z),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_value[12]  (
	.Q(Sigma_Delta_LVDS_ADC_0_Data_out_1[12]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator[12]),
	.EN(pwm_quantized_accumulator_0_sqmuxa_Z),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_value[13]  (
	.Q(Sigma_Delta_LVDS_ADC_0_Data_out_1[13]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator[13]),
	.EN(pwm_quantized_accumulator_0_sqmuxa_Z),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_value[14]  (
	.Q(Sigma_Delta_LVDS_ADC_0_Data_out_1[14]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator[14]),
	.EN(pwm_quantized_accumulator_0_sqmuxa_Z),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_value[15]  (
	.Q(Sigma_Delta_LVDS_ADC_0_Data_out_1[15]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator[15]),
	.EN(pwm_quantized_accumulator_0_sqmuxa_Z),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_value[0]  (
	.Q(Sigma_Delta_LVDS_ADC_0_Data_out_1[0]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator[0]),
	.EN(pwm_quantized_accumulator_0_sqmuxa_Z),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_value[1]  (
	.Q(Sigma_Delta_LVDS_ADC_0_Data_out_1[1]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator[1]),
	.EN(pwm_quantized_accumulator_0_sqmuxa_Z),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_value[2]  (
	.Q(Sigma_Delta_LVDS_ADC_0_Data_out_1[2]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator[2]),
	.EN(pwm_quantized_accumulator_0_sqmuxa_Z),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_value[3]  (
	.Q(Sigma_Delta_LVDS_ADC_0_Data_out_1[3]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator[3]),
	.EN(pwm_quantized_accumulator_0_sqmuxa_Z),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_value[4]  (
	.Q(Sigma_Delta_LVDS_ADC_0_Data_out_1[4]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator[4]),
	.EN(pwm_quantized_accumulator_0_sqmuxa_Z),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE sample_CLK_last (
	.Q(sample_CLK_last_Z),
	.ADn(VCC),
	.ALn(VCC),
	.CLK(PCLK_c),
	.D(sample_CLK),
	.EN(RSTn_c),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:88
  SLE analog_FF (
	.Q(LVDS_PADN_feedback_c),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(sample_CLK),
	.D(INBUF_DIFF_0_Y),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE data_ready_sig (
	.Q(Sigma_Delta_LVDS_ADC_0_Data_Ready),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator_0_sqmuxa_i),
	.EN(VCC),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_accumulator[0]  (
	.Q(pwm_quantized_accumulator[0]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator_lm[0]),
	.EN(pwm_quantized_accumulatore),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_accumulator[1]  (
	.Q(pwm_quantized_accumulator[1]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator_lm[1]),
	.EN(pwm_quantized_accumulatore),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_accumulator[2]  (
	.Q(pwm_quantized_accumulator[2]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator_lm[2]),
	.EN(pwm_quantized_accumulatore),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_accumulator[3]  (
	.Q(pwm_quantized_accumulator[3]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator_lm[3]),
	.EN(pwm_quantized_accumulatore),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_accumulator[4]  (
	.Q(pwm_quantized_accumulator[4]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator_lm[4]),
	.EN(pwm_quantized_accumulatore),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_accumulator[5]  (
	.Q(pwm_quantized_accumulator[5]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator_lm[5]),
	.EN(pwm_quantized_accumulatore),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_accumulator[6]  (
	.Q(pwm_quantized_accumulator[6]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator_lm[6]),
	.EN(pwm_quantized_accumulatore),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_accumulator[7]  (
	.Q(pwm_quantized_accumulator[7]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator_lm[7]),
	.EN(pwm_quantized_accumulatore),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_accumulator[8]  (
	.Q(pwm_quantized_accumulator[8]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator_lm[8]),
	.EN(pwm_quantized_accumulatore),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_accumulator[9]  (
	.Q(pwm_quantized_accumulator[9]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator_lm[9]),
	.EN(pwm_quantized_accumulatore),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_accumulator[10]  (
	.Q(pwm_quantized_accumulator[10]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator_lm[10]),
	.EN(pwm_quantized_accumulatore),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_accumulator[11]  (
	.Q(pwm_quantized_accumulator[11]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator_lm[11]),
	.EN(pwm_quantized_accumulatore),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_accumulator[12]  (
	.Q(pwm_quantized_accumulator[12]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator_lm[12]),
	.EN(pwm_quantized_accumulatore),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_accumulator[13]  (
	.Q(pwm_quantized_accumulator[13]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator_lm[13]),
	.EN(pwm_quantized_accumulatore),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_accumulator[14]  (
	.Q(pwm_quantized_accumulator[14]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator_lm[14]),
	.EN(pwm_quantized_accumulatore),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_quantized_accumulator[15]  (
	.Q(pwm_quantized_accumulator[15]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_quantized_accumulator_lm[15]),
	.EN(pwm_quantized_accumulatore),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_counter[0]  (
	.Q(pwm_counter[0]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_counter_s[0]),
	.EN(sample_CLK),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_counter[1]  (
	.Q(pwm_counter[1]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_counter_s[1]),
	.EN(sample_CLK),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_counter[2]  (
	.Q(pwm_counter[2]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_counter_s[2]),
	.EN(sample_CLK),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_counter[3]  (
	.Q(pwm_counter[3]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_counter_s[3]),
	.EN(sample_CLK),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_counter[4]  (
	.Q(pwm_counter[4]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_counter_s[4]),
	.EN(sample_CLK),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_counter[5]  (
	.Q(pwm_counter[5]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_counter_s[5]),
	.EN(sample_CLK),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_counter[6]  (
	.Q(pwm_counter[6]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_counter_s[6]),
	.EN(sample_CLK),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_counter[7]  (
	.Q(pwm_counter[7]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_counter_s[7]),
	.EN(sample_CLK),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_counter[8]  (
	.Q(pwm_counter[8]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_counter_s[8]),
	.EN(sample_CLK),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_counter[9]  (
	.Q(pwm_counter[9]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_counter_s[9]),
	.EN(sample_CLK),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_counter[10]  (
	.Q(pwm_counter[10]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_counter_s[10]),
	.EN(sample_CLK),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_counter[11]  (
	.Q(pwm_counter[11]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_counter_s[11]),
	.EN(sample_CLK),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_counter[12]  (
	.Q(pwm_counter[12]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_counter_s[12]),
	.EN(sample_CLK),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_counter[13]  (
	.Q(pwm_counter[13]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_counter_s[13]),
	.EN(sample_CLK),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_counter[14]  (
	.Q(pwm_counter[14]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_counter_s[14]),
	.EN(sample_CLK),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  SLE \pwm_counter[15]  (
	.Q(pwm_counter[15]),
	.ADn(VCC),
	.ALn(RSTn_c),
	.CLK(PCLK_c),
	.D(pwm_counter_s[15]),
	.EN(sample_CLK),
	.LAT(GND),
	.SD(GND),
	.SLn(VCC)
);
// @11:99
  ARI1 \pwm_counter_cry_cy[0]  (
	.FCO(pwm_counter_cry_cy),
	.S(pwm_counter_cry_cy_S[0]),
	.Y(pwm_counter_cry_cy_Y[0]),
	.B(sample_CLK_last_Z),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(VCC)
);
defparam \pwm_counter_cry_cy[0] .INIT=20'h45500;
// @11:99
  ARI1 \pwm_counter_cry[0]  (
	.FCO(pwm_counter_cry[0]),
	.S(pwm_counter_s[0]),
	.Y(pwm_counter_cry_Y[0]),
	.B(pwm_counter[0]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_counter_cry_cy)
);
defparam \pwm_counter_cry[0] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_counter_cry[1]  (
	.FCO(pwm_counter_cry[1]),
	.S(pwm_counter_s[1]),
	.Y(pwm_counter_cry_Y[1]),
	.B(pwm_counter[1]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_counter_cry[0])
);
defparam \pwm_counter_cry[1] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_counter_cry[2]  (
	.FCO(pwm_counter_cry[2]),
	.S(pwm_counter_s[2]),
	.Y(pwm_counter_cry_Y[2]),
	.B(pwm_counter[2]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_counter_cry[1])
);
defparam \pwm_counter_cry[2] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_counter_cry[3]  (
	.FCO(pwm_counter_cry[3]),
	.S(pwm_counter_s[3]),
	.Y(pwm_counter_cry_Y[3]),
	.B(pwm_counter[3]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_counter_cry[2])
);
defparam \pwm_counter_cry[3] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_counter_cry[4]  (
	.FCO(pwm_counter_cry[4]),
	.S(pwm_counter_s[4]),
	.Y(pwm_counter_cry_Y[4]),
	.B(pwm_counter[4]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_counter_cry[3])
);
defparam \pwm_counter_cry[4] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_counter_cry[5]  (
	.FCO(pwm_counter_cry[5]),
	.S(pwm_counter_s[5]),
	.Y(pwm_counter_cry_Y[5]),
	.B(pwm_counter[5]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_counter_cry[4])
);
defparam \pwm_counter_cry[5] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_counter_cry[6]  (
	.FCO(pwm_counter_cry[6]),
	.S(pwm_counter_s[6]),
	.Y(pwm_counter_cry_Y[6]),
	.B(pwm_counter[6]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_counter_cry[5])
);
defparam \pwm_counter_cry[6] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_counter_cry[7]  (
	.FCO(pwm_counter_cry[7]),
	.S(pwm_counter_s[7]),
	.Y(pwm_counter_cry_Y[7]),
	.B(pwm_counter[7]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_counter_cry[6])
);
defparam \pwm_counter_cry[7] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_counter_cry[8]  (
	.FCO(pwm_counter_cry[8]),
	.S(pwm_counter_s[8]),
	.Y(pwm_counter_cry_Y[8]),
	.B(pwm_counter[8]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_counter_cry[7])
);
defparam \pwm_counter_cry[8] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_counter_cry[9]  (
	.FCO(pwm_counter_cry[9]),
	.S(pwm_counter_s[9]),
	.Y(pwm_counter_cry_Y[9]),
	.B(pwm_counter[9]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_counter_cry[8])
);
defparam \pwm_counter_cry[9] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_counter_cry[10]  (
	.FCO(pwm_counter_cry[10]),
	.S(pwm_counter_s[10]),
	.Y(pwm_counter_cry_Y[10]),
	.B(pwm_counter[10]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_counter_cry[9])
);
defparam \pwm_counter_cry[10] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_counter_cry[11]  (
	.FCO(pwm_counter_cry[11]),
	.S(pwm_counter_s[11]),
	.Y(pwm_counter_cry_Y[11]),
	.B(pwm_counter[11]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_counter_cry[10])
);
defparam \pwm_counter_cry[11] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_counter_cry[12]  (
	.FCO(pwm_counter_cry[12]),
	.S(pwm_counter_s[12]),
	.Y(pwm_counter_cry_Y[12]),
	.B(pwm_counter[12]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_counter_cry[11])
);
defparam \pwm_counter_cry[12] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_counter_cry[13]  (
	.FCO(pwm_counter_cry[13]),
	.S(pwm_counter_s[13]),
	.Y(pwm_counter_cry_Y[13]),
	.B(pwm_counter[13]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_counter_cry[12])
);
defparam \pwm_counter_cry[13] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_counter_s[15]  (
	.FCO(pwm_counter_s_FCO[15]),
	.S(pwm_counter_s[15]),
	.Y(pwm_counter_s_Y[15]),
	.B(pwm_counter[15]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_counter_cry[14])
);
defparam \pwm_counter_s[15] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_counter_cry[14]  (
	.FCO(pwm_counter_cry[14]),
	.S(pwm_counter_s[14]),
	.Y(pwm_counter_cry_Y[14]),
	.B(pwm_counter[14]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_counter_cry[13])
);
defparam \pwm_counter_cry[14] .INIT=20'h4AA00;
// @11:99
  ARI1 pwm_quantized_accumulator_s_20 (
	.FCO(pwm_quantized_accumulator_s_20_FCO),
	.S(pwm_quantized_accumulator_s_20_S),
	.Y(pwm_quantized_accumulator_s_20_Y),
	.B(pwm_quantized_accumulator[0]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(VCC)
);
defparam pwm_quantized_accumulator_s_20.INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_quantized_accumulator_cry[1]  (
	.FCO(pwm_quantized_accumulator_cry[1]),
	.S(pwm_quantized_accumulator_s[1]),
	.Y(pwm_quantized_accumulator_cry_Y[1]),
	.B(pwm_quantized_accumulator[1]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_quantized_accumulator_s_20_FCO)
);
defparam \pwm_quantized_accumulator_cry[1] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_quantized_accumulator_cry[2]  (
	.FCO(pwm_quantized_accumulator_cry[2]),
	.S(pwm_quantized_accumulator_s[2]),
	.Y(pwm_quantized_accumulator_cry_Y[2]),
	.B(pwm_quantized_accumulator[2]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_quantized_accumulator_cry[1])
);
defparam \pwm_quantized_accumulator_cry[2] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_quantized_accumulator_cry[3]  (
	.FCO(pwm_quantized_accumulator_cry[3]),
	.S(pwm_quantized_accumulator_s[3]),
	.Y(pwm_quantized_accumulator_cry_Y[3]),
	.B(pwm_quantized_accumulator[3]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_quantized_accumulator_cry[2])
);
defparam \pwm_quantized_accumulator_cry[3] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_quantized_accumulator_cry[4]  (
	.FCO(pwm_quantized_accumulator_cry[4]),
	.S(pwm_quantized_accumulator_s[4]),
	.Y(pwm_quantized_accumulator_cry_Y[4]),
	.B(pwm_quantized_accumulator[4]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_quantized_accumulator_cry[3])
);
defparam \pwm_quantized_accumulator_cry[4] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_quantized_accumulator_cry[5]  (
	.FCO(pwm_quantized_accumulator_cry[5]),
	.S(pwm_quantized_accumulator_s[5]),
	.Y(pwm_quantized_accumulator_cry_Y[5]),
	.B(pwm_quantized_accumulator[5]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_quantized_accumulator_cry[4])
);
defparam \pwm_quantized_accumulator_cry[5] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_quantized_accumulator_cry[6]  (
	.FCO(pwm_quantized_accumulator_cry[6]),
	.S(pwm_quantized_accumulator_s[6]),
	.Y(pwm_quantized_accumulator_cry_Y[6]),
	.B(pwm_quantized_accumulator[6]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_quantized_accumulator_cry[5])
);
defparam \pwm_quantized_accumulator_cry[6] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_quantized_accumulator_cry[7]  (
	.FCO(pwm_quantized_accumulator_cry[7]),
	.S(pwm_quantized_accumulator_s[7]),
	.Y(pwm_quantized_accumulator_cry_Y[7]),
	.B(pwm_quantized_accumulator[7]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_quantized_accumulator_cry[6])
);
defparam \pwm_quantized_accumulator_cry[7] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_quantized_accumulator_cry[8]  (
	.FCO(pwm_quantized_accumulator_cry[8]),
	.S(pwm_quantized_accumulator_s[8]),
	.Y(pwm_quantized_accumulator_cry_Y[8]),
	.B(pwm_quantized_accumulator[8]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_quantized_accumulator_cry[7])
);
defparam \pwm_quantized_accumulator_cry[8] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_quantized_accumulator_cry[9]  (
	.FCO(pwm_quantized_accumulator_cry[9]),
	.S(pwm_quantized_accumulator_s[9]),
	.Y(pwm_quantized_accumulator_cry_Y[9]),
	.B(pwm_quantized_accumulator[9]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_quantized_accumulator_cry[8])
);
defparam \pwm_quantized_accumulator_cry[9] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_quantized_accumulator_cry[10]  (
	.FCO(pwm_quantized_accumulator_cry[10]),
	.S(pwm_quantized_accumulator_s[10]),
	.Y(pwm_quantized_accumulator_cry_Y[10]),
	.B(pwm_quantized_accumulator[10]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_quantized_accumulator_cry[9])
);
defparam \pwm_quantized_accumulator_cry[10] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_quantized_accumulator_cry[11]  (
	.FCO(pwm_quantized_accumulator_cry[11]),
	.S(pwm_quantized_accumulator_s[11]),
	.Y(pwm_quantized_accumulator_cry_Y[11]),
	.B(pwm_quantized_accumulator[11]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_quantized_accumulator_cry[10])
);
defparam \pwm_quantized_accumulator_cry[11] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_quantized_accumulator_cry[12]  (
	.FCO(pwm_quantized_accumulator_cry[12]),
	.S(pwm_quantized_accumulator_s[12]),
	.Y(pwm_quantized_accumulator_cry_Y[12]),
	.B(pwm_quantized_accumulator[12]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_quantized_accumulator_cry[11])
);
defparam \pwm_quantized_accumulator_cry[12] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_quantized_accumulator_cry[13]  (
	.FCO(pwm_quantized_accumulator_cry[13]),
	.S(pwm_quantized_accumulator_s[13]),
	.Y(pwm_quantized_accumulator_cry_Y[13]),
	.B(pwm_quantized_accumulator[13]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_quantized_accumulator_cry[12])
);
defparam \pwm_quantized_accumulator_cry[13] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_quantized_accumulator_s[15]  (
	.FCO(pwm_quantized_accumulator_s_FCO[15]),
	.S(pwm_quantized_accumulator_s[15]),
	.Y(pwm_quantized_accumulator_s_Y[15]),
	.B(pwm_quantized_accumulator[15]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_quantized_accumulator_cry[14])
);
defparam \pwm_quantized_accumulator_s[15] .INIT=20'h4AA00;
// @11:99
  ARI1 \pwm_quantized_accumulator_cry[14]  (
	.FCO(pwm_quantized_accumulator_cry[14]),
	.S(pwm_quantized_accumulator_s[14]),
	.Y(pwm_quantized_accumulator_cry_Y[14]),
	.B(pwm_quantized_accumulator[14]),
	.C(GND),
	.D(GND),
	.A(VCC),
	.FCI(pwm_quantized_accumulator_cry[13])
);
defparam \pwm_quantized_accumulator_cry[14] .INIT=20'h4AA00;
// @11:99
  CFG2 \pwm_quantized_accumulator_lm_0[0]  (
	.A(pwm_quantized_accumulator_0_sqmuxa_x_Z),
	.B(pwm_quantized_accumulator[0]),
	.Y(pwm_quantized_accumulator_lm[0])
);
defparam \pwm_quantized_accumulator_lm_0[0] .INIT=4'h1;
// @11:111
  CFG2 \p_the_quantization_stuff.un3_sample_clk_last  (
	.A(sample_CLK),
	.B(sample_CLK_last_Z),
	.Y(un3_sample_clk_last)
);
defparam \p_the_quantization_stuff.un3_sample_clk_last .INIT=4'h2;
// @11:119
  CFG4 pwm_quantized_accumulator_0_sqmuxa_5_0 (
	.A(pwm_counter[5]),
	.B(pwm_counter[4]),
	.C(pwm_counter[3]),
	.D(pwm_counter[2]),
	.Y(pwm_quantized_accumulator_0_sqmuxa_5_0_Z)
);
defparam pwm_quantized_accumulator_0_sqmuxa_5_0.INIT=16'h8000;
// @11:119
  CFG4 pwm_quantized_accumulator_0_sqmuxa_4_0 (
	.A(pwm_counter[9]),
	.B(pwm_counter[8]),
	.C(pwm_counter[7]),
	.D(pwm_counter[6]),
	.Y(pwm_quantized_accumulator_0_sqmuxa_4_0_Z)
);
defparam pwm_quantized_accumulator_0_sqmuxa_4_0.INIT=16'h8000;
// @11:119
  CFG4 pwm_quantized_accumulator_0_sqmuxa_3_0 (
	.A(pwm_counter[13]),
	.B(pwm_counter[12]),
	.C(pwm_counter[11]),
	.D(pwm_counter[10]),
	.Y(pwm_quantized_accumulator_0_sqmuxa_3_0_Z)
);
defparam pwm_quantized_accumulator_0_sqmuxa_3_0.INIT=16'h8000;
// @11:119
  CFG4 pwm_quantized_accumulator_0_sqmuxa_2_0 (
	.A(pwm_counter[15]),
	.B(pwm_counter[14]),
	.C(pwm_counter[1]),
	.D(pwm_counter[0]),
	.Y(pwm_quantized_accumulator_0_sqmuxa_2_0_Z)
);
defparam pwm_quantized_accumulator_0_sqmuxa_2_0.INIT=16'h8000;
// @11:119
  CFG4 pwm_quantized_accumulator_0_sqmuxa_x_5 (
	.A(pwm_counter[11]),
	.B(pwm_counter[10]),
	.C(pwm_counter[9]),
	.D(pwm_counter[8]),
	.Y(pwm_quantized_accumulator_0_sqmuxa_x_5_Z)
);
defparam pwm_quantized_accumulator_0_sqmuxa_x_5.INIT=16'h8000;
// @11:119
  CFG4 pwm_quantized_accumulator_0_sqmuxa_x_4 (
	.A(pwm_counter[13]),
	.B(pwm_counter[12]),
	.C(pwm_counter[3]),
	.D(pwm_counter[2]),
	.Y(pwm_quantized_accumulator_0_sqmuxa_x_4_Z)
);
defparam pwm_quantized_accumulator_0_sqmuxa_x_4.INIT=16'h8000;
// @11:119
  CFG4 pwm_quantized_accumulator_0_sqmuxa_x_3 (
	.A(pwm_counter[7]),
	.B(pwm_counter[6]),
	.C(pwm_counter[5]),
	.D(pwm_counter[4]),
	.Y(pwm_quantized_accumulator_0_sqmuxa_x_3_Z)
);
defparam pwm_quantized_accumulator_0_sqmuxa_x_3.INIT=16'h8000;
// @11:119
  CFG4 pwm_quantized_accumulator_0_sqmuxa_x_2 (
	.A(pwm_counter[15]),
	.B(pwm_counter[14]),
	.C(pwm_counter[1]),
	.D(pwm_counter[0]),
	.Y(pwm_quantized_accumulator_0_sqmuxa_x_2_Z)
);
defparam pwm_quantized_accumulator_0_sqmuxa_x_2.INIT=16'h8000;
// @11:119
  CFG4 \p_the_quantization_stuff.un13_sample_clk_last_11  (
	.A(pwm_quantized_accumulator[11]),
	.B(pwm_quantized_accumulator[10]),
	.C(pwm_quantized_accumulator[9]),
	.D(pwm_quantized_accumulator[8]),
	.Y(un13_sample_clk_last_11)
);
defparam \p_the_quantization_stuff.un13_sample_clk_last_11 .INIT=16'h8000;
// @11:119
  CFG4 \p_the_quantization_stuff.un13_sample_clk_last_10  (
	.A(pwm_quantized_accumulator[15]),
	.B(pwm_quantized_accumulator[14]),
	.C(pwm_quantized_accumulator[13]),
	.D(pwm_quantized_accumulator[12]),
	.Y(un13_sample_clk_last_10)
);
defparam \p_the_quantization_stuff.un13_sample_clk_last_10 .INIT=16'h8000;
// @11:119
  CFG4 \p_the_quantization_stuff.un13_sample_clk_last_9  (
	.A(pwm_quantized_accumulator[3]),
	.B(pwm_quantized_accumulator[2]),
	.C(pwm_quantized_accumulator[1]),
	.D(pwm_quantized_accumulator[0]),
	.Y(un13_sample_clk_last_9)
);
defparam \p_the_quantization_stuff.un13_sample_clk_last_9 .INIT=16'h8000;
// @11:119
  CFG4 \p_the_quantization_stuff.un13_sample_clk_last_8  (
	.A(pwm_quantized_accumulator[7]),
	.B(pwm_quantized_accumulator[6]),
	.C(pwm_quantized_accumulator[5]),
	.D(pwm_quantized_accumulator[4]),
	.Y(un13_sample_clk_last_8)
);
defparam \p_the_quantization_stuff.un13_sample_clk_last_8 .INIT=16'h8000;
// @11:119
  CFG2 pwm_quantized_accumulator_0_sqmuxa_7 (
	.A(pwm_quantized_accumulator_0_sqmuxa_4_0_Z),
	.B(pwm_quantized_accumulator_0_sqmuxa_5_0_Z),
	.Y(pwm_quantized_accumulator_0_sqmuxa_7_Z)
);
defparam pwm_quantized_accumulator_0_sqmuxa_7.INIT=4'h8;
// @11:119
  CFG4 pwm_quantized_accumulator_0_sqmuxa_x (
	.A(pwm_quantized_accumulator_0_sqmuxa_x_5_Z),
	.B(pwm_quantized_accumulator_0_sqmuxa_x_4_Z),
	.C(pwm_quantized_accumulator_0_sqmuxa_x_3_Z),
	.D(pwm_quantized_accumulator_0_sqmuxa_x_2_Z),
	.Y(pwm_quantized_accumulator_0_sqmuxa_x_Z)
);
defparam pwm_quantized_accumulator_0_sqmuxa_x.INIT=16'h8000;
// @11:119
  CFG4 \p_the_quantization_stuff.un13_sample_clk_last  (
	.A(un13_sample_clk_last_10),
	.B(un13_sample_clk_last_11),
	.C(un13_sample_clk_last_9),
	.D(un13_sample_clk_last_8),
	.Y(un13_sample_clk_last)
);
defparam \p_the_quantization_stuff.un13_sample_clk_last .INIT=16'h8000;
// @11:119
  CFG4 pwm_quantized_accumulator_0_sqmuxa (
	.A(un3_sample_clk_last),
	.B(pwm_quantized_accumulator_0_sqmuxa_3_0_Z),
	.C(pwm_quantized_accumulator_0_sqmuxa_2_0_Z),
	.D(pwm_quantized_accumulator_0_sqmuxa_7_Z),
	.Y(pwm_quantized_accumulator_0_sqmuxa_Z)
);
defparam pwm_quantized_accumulator_0_sqmuxa.INIT=16'h8000;
// @11:99
  CFG2 \pwm_quantized_accumulator_lm_0[15]  (
	.A(pwm_quantized_accumulator_0_sqmuxa_x_Z),
	.B(pwm_quantized_accumulator_s[15]),
	.Y(pwm_quantized_accumulator_lm[15])
);
defparam \pwm_quantized_accumulator_lm_0[15] .INIT=4'h4;
// @11:99
  CFG2 \pwm_quantized_accumulator_lm_0[14]  (
	.A(pwm_quantized_accumulator_0_sqmuxa_x_Z),
	.B(pwm_quantized_accumulator_s[14]),
	.Y(pwm_quantized_accumulator_lm[14])
);
defparam \pwm_quantized_accumulator_lm_0[14] .INIT=4'h4;
// @11:99
  CFG2 \pwm_quantized_accumulator_lm_0[13]  (
	.A(pwm_quantized_accumulator_0_sqmuxa_x_Z),
	.B(pwm_quantized_accumulator_s[13]),
	.Y(pwm_quantized_accumulator_lm[13])
);
defparam \pwm_quantized_accumulator_lm_0[13] .INIT=4'h4;
// @11:99
  CFG2 \pwm_quantized_accumulator_lm_0[12]  (
	.A(pwm_quantized_accumulator_0_sqmuxa_x_Z),
	.B(pwm_quantized_accumulator_s[12]),
	.Y(pwm_quantized_accumulator_lm[12])
);
defparam \pwm_quantized_accumulator_lm_0[12] .INIT=4'h4;
// @11:99
  CFG2 \pwm_quantized_accumulator_lm_0[11]  (
	.A(pwm_quantized_accumulator_0_sqmuxa_x_Z),
	.B(pwm_quantized_accumulator_s[11]),
	.Y(pwm_quantized_accumulator_lm[11])
);
defparam \pwm_quantized_accumulator_lm_0[11] .INIT=4'h4;
// @11:99
  CFG2 \pwm_quantized_accumulator_lm_0[10]  (
	.A(pwm_quantized_accumulator_0_sqmuxa_x_Z),
	.B(pwm_quantized_accumulator_s[10]),
	.Y(pwm_quantized_accumulator_lm[10])
);
defparam \pwm_quantized_accumulator_lm_0[10] .INIT=4'h4;
// @11:99
  CFG2 \pwm_quantized_accumulator_lm_0[9]  (
	.A(pwm_quantized_accumulator_0_sqmuxa_x_Z),
	.B(pwm_quantized_accumulator_s[9]),
	.Y(pwm_quantized_accumulator_lm[9])
);
defparam \pwm_quantized_accumulator_lm_0[9] .INIT=4'h4;
// @11:99
  CFG2 \pwm_quantized_accumulator_lm_0[8]  (
	.A(pwm_quantized_accumulator_0_sqmuxa_x_Z),
	.B(pwm_quantized_accumulator_s[8]),
	.Y(pwm_quantized_accumulator_lm[8])
);
defparam \pwm_quantized_accumulator_lm_0[8] .INIT=4'h4;
// @11:99
  CFG2 \pwm_quantized_accumulator_lm_0[7]  (
	.A(pwm_quantized_accumulator_0_sqmuxa_x_Z),
	.B(pwm_quantized_accumulator_s[7]),
	.Y(pwm_quantized_accumulator_lm[7])
);
defparam \pwm_quantized_accumulator_lm_0[7] .INIT=4'h4;
// @11:99
  CFG2 \pwm_quantized_accumulator_lm_0[6]  (
	.A(pwm_quantized_accumulator_0_sqmuxa_x_Z),
	.B(pwm_quantized_accumulator_s[6]),
	.Y(pwm_quantized_accumulator_lm[6])
);
defparam \pwm_quantized_accumulator_lm_0[6] .INIT=4'h4;
// @11:99
  CFG2 \pwm_quantized_accumulator_lm_0[5]  (
	.A(pwm_quantized_accumulator_0_sqmuxa_x_Z),
	.B(pwm_quantized_accumulator_s[5]),
	.Y(pwm_quantized_accumulator_lm[5])
);
defparam \pwm_quantized_accumulator_lm_0[5] .INIT=4'h4;
// @11:99
  CFG2 \pwm_quantized_accumulator_lm_0[4]  (
	.A(pwm_quantized_accumulator_0_sqmuxa_x_Z),
	.B(pwm_quantized_accumulator_s[4]),
	.Y(pwm_quantized_accumulator_lm[4])
);
defparam \pwm_quantized_accumulator_lm_0[4] .INIT=4'h4;
// @11:99
  CFG2 \pwm_quantized_accumulator_lm_0[3]  (
	.A(pwm_quantized_accumulator_0_sqmuxa_x_Z),
	.B(pwm_quantized_accumulator_s[3]),
	.Y(pwm_quantized_accumulator_lm[3])
);
defparam \pwm_quantized_accumulator_lm_0[3] .INIT=4'h4;
// @11:99
  CFG2 \pwm_quantized_accumulator_lm_0[2]  (
	.A(pwm_quantized_accumulator_0_sqmuxa_x_Z),
	.B(pwm_quantized_accumulator_s[2]),
	.Y(pwm_quantized_accumulator_lm[2])
);
defparam \pwm_quantized_accumulator_lm_0[2] .INIT=4'h4;
// @11:99
  CFG2 \pwm_quantized_accumulator_lm_0[1]  (
	.A(pwm_quantized_accumulator_0_sqmuxa_x_Z),
	.B(pwm_quantized_accumulator_s[1]),
	.Y(pwm_quantized_accumulator_lm[1])
);
defparam \pwm_quantized_accumulator_lm_0[1] .INIT=4'h4;
// @11:99
  CFG4 data_ready_sig_RNO (
	.A(un3_sample_clk_last),
	.B(pwm_quantized_accumulator_0_sqmuxa_3_0_Z),
	.C(pwm_quantized_accumulator_0_sqmuxa_2_0_Z),
	.D(pwm_quantized_accumulator_0_sqmuxa_7_Z),
	.Y(pwm_quantized_accumulator_0_sqmuxa_i)
);
defparam data_ready_sig_RNO.INIT=16'h7FFF;
// @12:109
  CFG4 \p_the_quantization_stuff.un13_sample_clk_last_RNID6PS  (
	.A(un3_sample_clk_last),
	.B(LVDS_PADN_feedback_c),
	.C(pwm_quantized_accumulator_0_sqmuxa_x_Z),
	.D(un13_sample_clk_last),
	.Y(pwm_quantized_accumulatore)
);
defparam \p_the_quantization_stuff.un13_sample_clk_last_RNID6PS .INIT=16'hA0A8;
// @11:72
  timer Sample_CLK_timer (
	.sample_CLK(sample_CLK),
	.PCLK_c(PCLK_c),
	.RSTn_c(RSTn_c)
);
  GND GND_Z (
	.Y(GND)
);
  VCC VCC_Z (
	.Y(VCC)
);
endmodule /* Sigma_Delta_LVDS_ADC */

module Sigma_Delta_system (
  PADN,
  PADP,
  PCLK,
  RSTn,
  Data_out,
  Data_out_ready,
  LVDS_PADN_feedback
)
;
input PADN ;
input PADP ;
input PCLK ;
input RSTn ;
output [15:0] Data_out ;
output Data_out_ready ;
output LVDS_PADN_feedback ;
wire PADN ;
wire PADP ;
wire PCLK ;
wire RSTn ;
wire Data_out_ready ;
wire LVDS_PADN_feedback ;
wire [15:0] Sigma_Delta_LVDS_ADC_0_Data_out_1;
wire [15:0] Data_out_c;
wire Sigma_Delta_LVDS_ADC_0_Data_Ready ;
wire INBUF_DIFF_0_Y ;
wire GND ;
wire VCC ;
wire PCLK_c ;
wire RSTn_c ;
wire Data_out_ready_c ;
wire LVDS_PADN_feedback_c ;
wire PCLK_ibuf_Z ;
wire RSTn_ibuf_Z ;
  CLKINT RSTn_ibuf_RNICUT3 (
	.Y(RSTn_c),
	.A(RSTn_ibuf_Z)
);
  CLKINT PCLK_ibuf_RNIFTKA (
	.Y(PCLK_c),
	.A(PCLK_ibuf_Z)
);
// @12:23
  INBUF PCLK_ibuf (
	.Y(PCLK_ibuf_Z),
	.PAD(PCLK)
);
// @12:24
  INBUF RSTn_ibuf (
	.Y(RSTn_ibuf_Z),
	.PAD(RSTn)
);
// @12:26
  OUTBUF \Data_out_obuf[0]  (
	.PAD(Data_out[0]),
	.D(Data_out_c[0])
);
// @12:26
  OUTBUF \Data_out_obuf[1]  (
	.PAD(Data_out[1]),
	.D(Data_out_c[1])
);
// @12:26
  OUTBUF \Data_out_obuf[2]  (
	.PAD(Data_out[2]),
	.D(Data_out_c[2])
);
// @12:26
  OUTBUF \Data_out_obuf[3]  (
	.PAD(Data_out[3]),
	.D(Data_out_c[3])
);
// @12:26
  OUTBUF \Data_out_obuf[4]  (
	.PAD(Data_out[4]),
	.D(Data_out_c[4])
);
// @12:26
  OUTBUF \Data_out_obuf[5]  (
	.PAD(Data_out[5]),
	.D(Data_out_c[5])
);
// @12:26
  OUTBUF \Data_out_obuf[6]  (
	.PAD(Data_out[6]),
	.D(Data_out_c[6])
);
// @12:26
  OUTBUF \Data_out_obuf[7]  (
	.PAD(Data_out[7]),
	.D(Data_out_c[7])
);
// @12:26
  OUTBUF \Data_out_obuf[8]  (
	.PAD(Data_out[8]),
	.D(Data_out_c[8])
);
// @12:26
  OUTBUF \Data_out_obuf[9]  (
	.PAD(Data_out[9]),
	.D(Data_out_c[9])
);
// @12:26
  OUTBUF \Data_out_obuf[10]  (
	.PAD(Data_out[10]),
	.D(Data_out_c[10])
);
// @12:26
  OUTBUF \Data_out_obuf[11]  (
	.PAD(Data_out[11]),
	.D(Data_out_c[11])
);
// @12:26
  OUTBUF \Data_out_obuf[12]  (
	.PAD(Data_out[12]),
	.D(Data_out_c[12])
);
// @12:26
  OUTBUF \Data_out_obuf[13]  (
	.PAD(Data_out[13]),
	.D(Data_out_c[13])
);
// @12:26
  OUTBUF \Data_out_obuf[14]  (
	.PAD(Data_out[14]),
	.D(Data_out_c[14])
);
// @12:26
  OUTBUF \Data_out_obuf[15]  (
	.PAD(Data_out[15]),
	.D(Data_out_c[15])
);
// @12:27
  OUTBUF Data_out_ready_obuf (
	.PAD(Data_out_ready),
	.D(Data_out_ready_c)
);
// @12:28
  OUTBUF LVDS_PADN_feedback_obuf (
	.PAD(LVDS_PADN_feedback),
	.D(LVDS_PADN_feedback_c)
);
// @12:100
  INBUF_DIFF INBUF_DIFF_0 (
	.Y(INBUF_DIFF_0_Y),
	.PADN(PADN),
	.PADP(PADP)
);
// @12:83
  Averaging_Filter Averaging_Filter_0 (
	.Data_out_c(Data_out_c[15:0]),
	.Sigma_Delta_LVDS_ADC_0_Data_out_1(Sigma_Delta_LVDS_ADC_0_Data_out_1[15:0]),
	.Sigma_Delta_LVDS_ADC_0_Data_Ready(Sigma_Delta_LVDS_ADC_0_Data_Ready),
	.Data_out_ready_c(Data_out_ready_c),
	.PCLK_c(PCLK_c),
	.RSTn_c(RSTn_c)
);
// @12:109
  Sigma_Delta_LVDS_ADC Sigma_Delta_LVDS_ADC_0 (
	.Sigma_Delta_LVDS_ADC_0_Data_out_1(Sigma_Delta_LVDS_ADC_0_Data_out_1[15:0]),
	.Sigma_Delta_LVDS_ADC_0_Data_Ready(Sigma_Delta_LVDS_ADC_0_Data_Ready),
	.INBUF_DIFF_0_Y(INBUF_DIFF_0_Y),
	.LVDS_PADN_feedback_c(LVDS_PADN_feedback_c),
	.PCLK_c(PCLK_c),
	.RSTn_c(RSTn_c)
);
  GND GND_Z (
	.Y(GND)
);
  VCC VCC_Z (
	.Y(VCC)
);
endmodule /* Sigma_Delta_system */

