//
// Written by Synplify Pro 
// Product Version "N-2018.03M-SP1-1"
// Program "Synplify Pro", Mapper "mapact, Build 2461R"
// Tue Feb 18 03:13:17 2020
//
// Source file index table:
// Object locations will have the form <file>:<line>
// file 0 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\vhd2008\std.vhd "
// file 1 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\vhd\snps_haps_pkg.vhd "
// file 2 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\vhd2008\std1164.vhd "
// file 3 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\vhd2008\std_textio.vhd "
// file 4 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\vhd2008\numeric.vhd "
// file 5 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\vhd\umr_capim.vhd "
// file 6 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\vhd2008\arith.vhd "
// file 7 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\vhd2008\unsigned.vhd "
// file 8 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\vhd\hyperents.vhd "
// file 9 "\c:\users\phoenix136\dropbox\fpga\microsemi\fft_core\component\work\hard_mult_addsub_c0\hard_mult_addsub_c0_0\hard_mult_addsub_c0_hard_mult_addsub_c0_0_hard_mult_addsub.vhd "
// file 10 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\generic\smartfusion2.vhd "
// file 11 "\c:\users\phoenix136\dropbox\fpga\microsemi\fft_core\component\work\hard_mult_addsub_c0\hard_mult_addsub_c0.vhd "
// file 12 "\c:\microsemi\libero_soc_v12.1\synplifypro\lib\nlconst.dat "
// file 13 "\c:\users\phoenix136\dropbox\fpga\microsemi\fft_core\designer\hard_mult_addsub_c0\synthesis.fdc "

`timescale 100 ps/100 ps
module HARD_MULT_ADDSUB_C0_HARD_MULT_ADDSUB_C0_0_HARD_MULT_ADDSUB (
  C_c,
  B0_c,
  B1_c,
  A1_c,
  A0_c,
  P_c,
  CDOUT_c
)
;
input [34:0] C_c ;
input [8:0] B0_c ;
input [8:0] B1_c ;
input [8:0] A1_c ;
input [8:0] A0_c ;
output [34:0] P_c ;
output [43:0] CDOUT_c ;
wire [8:0] U0_P;
wire U0_OVFL_CARRYOUT ;
wire GND ;
wire VCC ;
// @9:103
  MACC U0 (
	.CDOUT(CDOUT_c[43:0]),
	.OVFL_CARRYOUT(U0_OVFL_CARRYOUT),
	.P({P_c[34:0], U0_P[8:0]}),
	.CDIN({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.A({A1_c[8:0], A0_c[8:0]}),
	.B({B0_c[8:0], B1_c[8:0]}),
	.C({C_c[34:0], GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.P_BYPASS({VCC, VCC}),
	.A_BYPASS({VCC, VCC}),
	.B_BYPASS({VCC, VCC}),
	.C_BYPASS({VCC, VCC}),
	.P_EN({VCC, VCC}),
	.A_EN({VCC, VCC}),
	.B_EN({VCC, VCC}),
	.C_EN({VCC, VCC}),
	.P_ARST_N({VCC, VCC}),
	.A_ARST_N({VCC, VCC}),
	.B_ARST_N({VCC, VCC}),
	.C_ARST_N({VCC, VCC}),
	.P_SRST_N({VCC, VCC}),
	.A_SRST_N({VCC, VCC}),
	.B_SRST_N({VCC, VCC}),
	.C_SRST_N({VCC, VCC}),
	.CLK({GND, GND}),
	.FDBKSEL(GND),
	.CDSEL(GND),
	.ARSHFT17(GND),
	.SUB(GND),
	.FDBKSEL_BYPASS(VCC),
	.CDSEL_BYPASS(VCC),
	.ARSHFT17_BYPASS(VCC),
	.SUB_BYPASS(VCC),
	.FDBKSEL_EN(VCC),
	.CDSEL_EN(VCC),
	.ARSHFT17_EN(VCC),
	.SUB_EN(VCC),
	.FDBKSEL_AL_N(VCC),
	.CDSEL_AL_N(VCC),
	.ARSHFT17_AL_N(VCC),
	.SUB_AL_N(VCC),
	.FDBKSEL_AD(GND),
	.CDSEL_AD(GND),
	.ARSHFT17_AD(GND),
	.SUB_AD(GND),
	.FDBKSEL_SL_N(VCC),
	.CDSEL_SL_N(VCC),
	.ARSHFT17_SL_N(VCC),
	.SUB_SL_N(VCC),
	.FDBKSEL_SD_N(VCC),
	.CDSEL_SD_N(VCC),
	.ARSHFT17_SD_N(VCC),
	.SUB_SD_N(VCC),
	.SIMD(GND),
	.DOTP(VCC),
	.CARRYIN(GND),
	.OVFL_CARRYOUT_SEL(GND)
);
  GND GND_Z (
	.Y(GND)
);
  VCC VCC_Z (
	.Y(VCC)
);
endmodule /* HARD_MULT_ADDSUB_C0_HARD_MULT_ADDSUB_C0_0_HARD_MULT_ADDSUB */

module HARD_MULT_ADDSUB_C0 (
  A0,
  A1,
  B0,
  B1,
  C,
  CDOUT,
  P
)
;
input [8:0] A0 ;
input [8:0] A1 ;
input [8:0] B0 ;
input [8:0] B1 ;
input [34:0] C ;
output [43:0] CDOUT ;
output [34:0] P ;
wire [8:0] A0_c;
wire [8:0] A1_c;
wire [8:0] B0_c;
wire [8:0] B1_c;
wire [34:0] C_c;
wire [43:0] CDOUT_c;
wire [34:0] P_c;
wire GND ;
wire VCC ;
// @11:21
  INBUF \A0_ibuf[0]  (
	.Y(A0_c[0]),
	.PAD(A0[0])
);
// @11:21
  INBUF \A0_ibuf[1]  (
	.Y(A0_c[1]),
	.PAD(A0[1])
);
// @11:21
  INBUF \A0_ibuf[2]  (
	.Y(A0_c[2]),
	.PAD(A0[2])
);
// @11:21
  INBUF \A0_ibuf[3]  (
	.Y(A0_c[3]),
	.PAD(A0[3])
);
// @11:21
  INBUF \A0_ibuf[4]  (
	.Y(A0_c[4]),
	.PAD(A0[4])
);
// @11:21
  INBUF \A0_ibuf[5]  (
	.Y(A0_c[5]),
	.PAD(A0[5])
);
// @11:21
  INBUF \A0_ibuf[6]  (
	.Y(A0_c[6]),
	.PAD(A0[6])
);
// @11:21
  INBUF \A0_ibuf[7]  (
	.Y(A0_c[7]),
	.PAD(A0[7])
);
// @11:21
  INBUF \A0_ibuf[8]  (
	.Y(A0_c[8]),
	.PAD(A0[8])
);
// @11:22
  INBUF \A1_ibuf[0]  (
	.Y(A1_c[0]),
	.PAD(A1[0])
);
// @11:22
  INBUF \A1_ibuf[1]  (
	.Y(A1_c[1]),
	.PAD(A1[1])
);
// @11:22
  INBUF \A1_ibuf[2]  (
	.Y(A1_c[2]),
	.PAD(A1[2])
);
// @11:22
  INBUF \A1_ibuf[3]  (
	.Y(A1_c[3]),
	.PAD(A1[3])
);
// @11:22
  INBUF \A1_ibuf[4]  (
	.Y(A1_c[4]),
	.PAD(A1[4])
);
// @11:22
  INBUF \A1_ibuf[5]  (
	.Y(A1_c[5]),
	.PAD(A1[5])
);
// @11:22
  INBUF \A1_ibuf[6]  (
	.Y(A1_c[6]),
	.PAD(A1[6])
);
// @11:22
  INBUF \A1_ibuf[7]  (
	.Y(A1_c[7]),
	.PAD(A1[7])
);
// @11:22
  INBUF \A1_ibuf[8]  (
	.Y(A1_c[8]),
	.PAD(A1[8])
);
// @11:23
  INBUF \B0_ibuf[0]  (
	.Y(B0_c[0]),
	.PAD(B0[0])
);
// @11:23
  INBUF \B0_ibuf[1]  (
	.Y(B0_c[1]),
	.PAD(B0[1])
);
// @11:23
  INBUF \B0_ibuf[2]  (
	.Y(B0_c[2]),
	.PAD(B0[2])
);
// @11:23
  INBUF \B0_ibuf[3]  (
	.Y(B0_c[3]),
	.PAD(B0[3])
);
// @11:23
  INBUF \B0_ibuf[4]  (
	.Y(B0_c[4]),
	.PAD(B0[4])
);
// @11:23
  INBUF \B0_ibuf[5]  (
	.Y(B0_c[5]),
	.PAD(B0[5])
);
// @11:23
  INBUF \B0_ibuf[6]  (
	.Y(B0_c[6]),
	.PAD(B0[6])
);
// @11:23
  INBUF \B0_ibuf[7]  (
	.Y(B0_c[7]),
	.PAD(B0[7])
);
// @11:23
  INBUF \B0_ibuf[8]  (
	.Y(B0_c[8]),
	.PAD(B0[8])
);
// @11:24
  INBUF \B1_ibuf[0]  (
	.Y(B1_c[0]),
	.PAD(B1[0])
);
// @11:24
  INBUF \B1_ibuf[1]  (
	.Y(B1_c[1]),
	.PAD(B1[1])
);
// @11:24
  INBUF \B1_ibuf[2]  (
	.Y(B1_c[2]),
	.PAD(B1[2])
);
// @11:24
  INBUF \B1_ibuf[3]  (
	.Y(B1_c[3]),
	.PAD(B1[3])
);
// @11:24
  INBUF \B1_ibuf[4]  (
	.Y(B1_c[4]),
	.PAD(B1[4])
);
// @11:24
  INBUF \B1_ibuf[5]  (
	.Y(B1_c[5]),
	.PAD(B1[5])
);
// @11:24
  INBUF \B1_ibuf[6]  (
	.Y(B1_c[6]),
	.PAD(B1[6])
);
// @11:24
  INBUF \B1_ibuf[7]  (
	.Y(B1_c[7]),
	.PAD(B1[7])
);
// @11:24
  INBUF \B1_ibuf[8]  (
	.Y(B1_c[8]),
	.PAD(B1[8])
);
// @11:25
  INBUF \C_ibuf[0]  (
	.Y(C_c[0]),
	.PAD(C[0])
);
// @11:25
  INBUF \C_ibuf[1]  (
	.Y(C_c[1]),
	.PAD(C[1])
);
// @11:25
  INBUF \C_ibuf[2]  (
	.Y(C_c[2]),
	.PAD(C[2])
);
// @11:25
  INBUF \C_ibuf[3]  (
	.Y(C_c[3]),
	.PAD(C[3])
);
// @11:25
  INBUF \C_ibuf[4]  (
	.Y(C_c[4]),
	.PAD(C[4])
);
// @11:25
  INBUF \C_ibuf[5]  (
	.Y(C_c[5]),
	.PAD(C[5])
);
// @11:25
  INBUF \C_ibuf[6]  (
	.Y(C_c[6]),
	.PAD(C[6])
);
// @11:25
  INBUF \C_ibuf[7]  (
	.Y(C_c[7]),
	.PAD(C[7])
);
// @11:25
  INBUF \C_ibuf[8]  (
	.Y(C_c[8]),
	.PAD(C[8])
);
// @11:25
  INBUF \C_ibuf[9]  (
	.Y(C_c[9]),
	.PAD(C[9])
);
// @11:25
  INBUF \C_ibuf[10]  (
	.Y(C_c[10]),
	.PAD(C[10])
);
// @11:25
  INBUF \C_ibuf[11]  (
	.Y(C_c[11]),
	.PAD(C[11])
);
// @11:25
  INBUF \C_ibuf[12]  (
	.Y(C_c[12]),
	.PAD(C[12])
);
// @11:25
  INBUF \C_ibuf[13]  (
	.Y(C_c[13]),
	.PAD(C[13])
);
// @11:25
  INBUF \C_ibuf[14]  (
	.Y(C_c[14]),
	.PAD(C[14])
);
// @11:25
  INBUF \C_ibuf[15]  (
	.Y(C_c[15]),
	.PAD(C[15])
);
// @11:25
  INBUF \C_ibuf[16]  (
	.Y(C_c[16]),
	.PAD(C[16])
);
// @11:25
  INBUF \C_ibuf[17]  (
	.Y(C_c[17]),
	.PAD(C[17])
);
// @11:25
  INBUF \C_ibuf[18]  (
	.Y(C_c[18]),
	.PAD(C[18])
);
// @11:25
  INBUF \C_ibuf[19]  (
	.Y(C_c[19]),
	.PAD(C[19])
);
// @11:25
  INBUF \C_ibuf[20]  (
	.Y(C_c[20]),
	.PAD(C[20])
);
// @11:25
  INBUF \C_ibuf[21]  (
	.Y(C_c[21]),
	.PAD(C[21])
);
// @11:25
  INBUF \C_ibuf[22]  (
	.Y(C_c[22]),
	.PAD(C[22])
);
// @11:25
  INBUF \C_ibuf[23]  (
	.Y(C_c[23]),
	.PAD(C[23])
);
// @11:25
  INBUF \C_ibuf[24]  (
	.Y(C_c[24]),
	.PAD(C[24])
);
// @11:25
  INBUF \C_ibuf[25]  (
	.Y(C_c[25]),
	.PAD(C[25])
);
// @11:25
  INBUF \C_ibuf[26]  (
	.Y(C_c[26]),
	.PAD(C[26])
);
// @11:25
  INBUF \C_ibuf[27]  (
	.Y(C_c[27]),
	.PAD(C[27])
);
// @11:25
  INBUF \C_ibuf[28]  (
	.Y(C_c[28]),
	.PAD(C[28])
);
// @11:25
  INBUF \C_ibuf[29]  (
	.Y(C_c[29]),
	.PAD(C[29])
);
// @11:25
  INBUF \C_ibuf[30]  (
	.Y(C_c[30]),
	.PAD(C[30])
);
// @11:25
  INBUF \C_ibuf[31]  (
	.Y(C_c[31]),
	.PAD(C[31])
);
// @11:25
  INBUF \C_ibuf[32]  (
	.Y(C_c[32]),
	.PAD(C[32])
);
// @11:25
  INBUF \C_ibuf[33]  (
	.Y(C_c[33]),
	.PAD(C[33])
);
// @11:25
  INBUF \C_ibuf[34]  (
	.Y(C_c[34]),
	.PAD(C[34])
);
// @11:27
  OUTBUF \CDOUT_obuf[0]  (
	.PAD(CDOUT[0]),
	.D(CDOUT_c[0])
);
// @11:27
  OUTBUF \CDOUT_obuf[1]  (
	.PAD(CDOUT[1]),
	.D(CDOUT_c[1])
);
// @11:27
  OUTBUF \CDOUT_obuf[2]  (
	.PAD(CDOUT[2]),
	.D(CDOUT_c[2])
);
// @11:27
  OUTBUF \CDOUT_obuf[3]  (
	.PAD(CDOUT[3]),
	.D(CDOUT_c[3])
);
// @11:27
  OUTBUF \CDOUT_obuf[4]  (
	.PAD(CDOUT[4]),
	.D(CDOUT_c[4])
);
// @11:27
  OUTBUF \CDOUT_obuf[5]  (
	.PAD(CDOUT[5]),
	.D(CDOUT_c[5])
);
// @11:27
  OUTBUF \CDOUT_obuf[6]  (
	.PAD(CDOUT[6]),
	.D(CDOUT_c[6])
);
// @11:27
  OUTBUF \CDOUT_obuf[7]  (
	.PAD(CDOUT[7]),
	.D(CDOUT_c[7])
);
// @11:27
  OUTBUF \CDOUT_obuf[8]  (
	.PAD(CDOUT[8]),
	.D(CDOUT_c[8])
);
// @11:27
  OUTBUF \CDOUT_obuf[9]  (
	.PAD(CDOUT[9]),
	.D(CDOUT_c[9])
);
// @11:27
  OUTBUF \CDOUT_obuf[10]  (
	.PAD(CDOUT[10]),
	.D(CDOUT_c[10])
);
// @11:27
  OUTBUF \CDOUT_obuf[11]  (
	.PAD(CDOUT[11]),
	.D(CDOUT_c[11])
);
// @11:27
  OUTBUF \CDOUT_obuf[12]  (
	.PAD(CDOUT[12]),
	.D(CDOUT_c[12])
);
// @11:27
  OUTBUF \CDOUT_obuf[13]  (
	.PAD(CDOUT[13]),
	.D(CDOUT_c[13])
);
// @11:27
  OUTBUF \CDOUT_obuf[14]  (
	.PAD(CDOUT[14]),
	.D(CDOUT_c[14])
);
// @11:27
  OUTBUF \CDOUT_obuf[15]  (
	.PAD(CDOUT[15]),
	.D(CDOUT_c[15])
);
// @11:27
  OUTBUF \CDOUT_obuf[16]  (
	.PAD(CDOUT[16]),
	.D(CDOUT_c[16])
);
// @11:27
  OUTBUF \CDOUT_obuf[17]  (
	.PAD(CDOUT[17]),
	.D(CDOUT_c[17])
);
// @11:27
  OUTBUF \CDOUT_obuf[18]  (
	.PAD(CDOUT[18]),
	.D(CDOUT_c[18])
);
// @11:27
  OUTBUF \CDOUT_obuf[19]  (
	.PAD(CDOUT[19]),
	.D(CDOUT_c[19])
);
// @11:27
  OUTBUF \CDOUT_obuf[20]  (
	.PAD(CDOUT[20]),
	.D(CDOUT_c[20])
);
// @11:27
  OUTBUF \CDOUT_obuf[21]  (
	.PAD(CDOUT[21]),
	.D(CDOUT_c[21])
);
// @11:27
  OUTBUF \CDOUT_obuf[22]  (
	.PAD(CDOUT[22]),
	.D(CDOUT_c[22])
);
// @11:27
  OUTBUF \CDOUT_obuf[23]  (
	.PAD(CDOUT[23]),
	.D(CDOUT_c[23])
);
// @11:27
  OUTBUF \CDOUT_obuf[24]  (
	.PAD(CDOUT[24]),
	.D(CDOUT_c[24])
);
// @11:27
  OUTBUF \CDOUT_obuf[25]  (
	.PAD(CDOUT[25]),
	.D(CDOUT_c[25])
);
// @11:27
  OUTBUF \CDOUT_obuf[26]  (
	.PAD(CDOUT[26]),
	.D(CDOUT_c[26])
);
// @11:27
  OUTBUF \CDOUT_obuf[27]  (
	.PAD(CDOUT[27]),
	.D(CDOUT_c[27])
);
// @11:27
  OUTBUF \CDOUT_obuf[28]  (
	.PAD(CDOUT[28]),
	.D(CDOUT_c[28])
);
// @11:27
  OUTBUF \CDOUT_obuf[29]  (
	.PAD(CDOUT[29]),
	.D(CDOUT_c[29])
);
// @11:27
  OUTBUF \CDOUT_obuf[30]  (
	.PAD(CDOUT[30]),
	.D(CDOUT_c[30])
);
// @11:27
  OUTBUF \CDOUT_obuf[31]  (
	.PAD(CDOUT[31]),
	.D(CDOUT_c[31])
);
// @11:27
  OUTBUF \CDOUT_obuf[32]  (
	.PAD(CDOUT[32]),
	.D(CDOUT_c[32])
);
// @11:27
  OUTBUF \CDOUT_obuf[33]  (
	.PAD(CDOUT[33]),
	.D(CDOUT_c[33])
);
// @11:27
  OUTBUF \CDOUT_obuf[34]  (
	.PAD(CDOUT[34]),
	.D(CDOUT_c[34])
);
// @11:27
  OUTBUF \CDOUT_obuf[35]  (
	.PAD(CDOUT[35]),
	.D(CDOUT_c[35])
);
// @11:27
  OUTBUF \CDOUT_obuf[36]  (
	.PAD(CDOUT[36]),
	.D(CDOUT_c[36])
);
// @11:27
  OUTBUF \CDOUT_obuf[37]  (
	.PAD(CDOUT[37]),
	.D(CDOUT_c[37])
);
// @11:27
  OUTBUF \CDOUT_obuf[38]  (
	.PAD(CDOUT[38]),
	.D(CDOUT_c[38])
);
// @11:27
  OUTBUF \CDOUT_obuf[39]  (
	.PAD(CDOUT[39]),
	.D(CDOUT_c[39])
);
// @11:27
  OUTBUF \CDOUT_obuf[40]  (
	.PAD(CDOUT[40]),
	.D(CDOUT_c[40])
);
// @11:27
  OUTBUF \CDOUT_obuf[41]  (
	.PAD(CDOUT[41]),
	.D(CDOUT_c[41])
);
// @11:27
  OUTBUF \CDOUT_obuf[42]  (
	.PAD(CDOUT[42]),
	.D(CDOUT_c[42])
);
// @11:27
  OUTBUF \CDOUT_obuf[43]  (
	.PAD(CDOUT[43]),
	.D(CDOUT_c[43])
);
// @11:28
  OUTBUF \P_obuf[0]  (
	.PAD(P[0]),
	.D(P_c[0])
);
// @11:28
  OUTBUF \P_obuf[1]  (
	.PAD(P[1]),
	.D(P_c[1])
);
// @11:28
  OUTBUF \P_obuf[2]  (
	.PAD(P[2]),
	.D(P_c[2])
);
// @11:28
  OUTBUF \P_obuf[3]  (
	.PAD(P[3]),
	.D(P_c[3])
);
// @11:28
  OUTBUF \P_obuf[4]  (
	.PAD(P[4]),
	.D(P_c[4])
);
// @11:28
  OUTBUF \P_obuf[5]  (
	.PAD(P[5]),
	.D(P_c[5])
);
// @11:28
  OUTBUF \P_obuf[6]  (
	.PAD(P[6]),
	.D(P_c[6])
);
// @11:28
  OUTBUF \P_obuf[7]  (
	.PAD(P[7]),
	.D(P_c[7])
);
// @11:28
  OUTBUF \P_obuf[8]  (
	.PAD(P[8]),
	.D(P_c[8])
);
// @11:28
  OUTBUF \P_obuf[9]  (
	.PAD(P[9]),
	.D(P_c[9])
);
// @11:28
  OUTBUF \P_obuf[10]  (
	.PAD(P[10]),
	.D(P_c[10])
);
// @11:28
  OUTBUF \P_obuf[11]  (
	.PAD(P[11]),
	.D(P_c[11])
);
// @11:28
  OUTBUF \P_obuf[12]  (
	.PAD(P[12]),
	.D(P_c[12])
);
// @11:28
  OUTBUF \P_obuf[13]  (
	.PAD(P[13]),
	.D(P_c[13])
);
// @11:28
  OUTBUF \P_obuf[14]  (
	.PAD(P[14]),
	.D(P_c[14])
);
// @11:28
  OUTBUF \P_obuf[15]  (
	.PAD(P[15]),
	.D(P_c[15])
);
// @11:28
  OUTBUF \P_obuf[16]  (
	.PAD(P[16]),
	.D(P_c[16])
);
// @11:28
  OUTBUF \P_obuf[17]  (
	.PAD(P[17]),
	.D(P_c[17])
);
// @11:28
  OUTBUF \P_obuf[18]  (
	.PAD(P[18]),
	.D(P_c[18])
);
// @11:28
  OUTBUF \P_obuf[19]  (
	.PAD(P[19]),
	.D(P_c[19])
);
// @11:28
  OUTBUF \P_obuf[20]  (
	.PAD(P[20]),
	.D(P_c[20])
);
// @11:28
  OUTBUF \P_obuf[21]  (
	.PAD(P[21]),
	.D(P_c[21])
);
// @11:28
  OUTBUF \P_obuf[22]  (
	.PAD(P[22]),
	.D(P_c[22])
);
// @11:28
  OUTBUF \P_obuf[23]  (
	.PAD(P[23]),
	.D(P_c[23])
);
// @11:28
  OUTBUF \P_obuf[24]  (
	.PAD(P[24]),
	.D(P_c[24])
);
// @11:28
  OUTBUF \P_obuf[25]  (
	.PAD(P[25]),
	.D(P_c[25])
);
// @11:28
  OUTBUF \P_obuf[26]  (
	.PAD(P[26]),
	.D(P_c[26])
);
// @11:28
  OUTBUF \P_obuf[27]  (
	.PAD(P[27]),
	.D(P_c[27])
);
// @11:28
  OUTBUF \P_obuf[28]  (
	.PAD(P[28]),
	.D(P_c[28])
);
// @11:28
  OUTBUF \P_obuf[29]  (
	.PAD(P[29]),
	.D(P_c[29])
);
// @11:28
  OUTBUF \P_obuf[30]  (
	.PAD(P[30]),
	.D(P_c[30])
);
// @11:28
  OUTBUF \P_obuf[31]  (
	.PAD(P[31]),
	.D(P_c[31])
);
// @11:28
  OUTBUF \P_obuf[32]  (
	.PAD(P[32]),
	.D(P_c[32])
);
// @11:28
  OUTBUF \P_obuf[33]  (
	.PAD(P[33]),
	.D(P_c[33])
);
// @11:28
  OUTBUF \P_obuf[34]  (
	.PAD(P[34]),
	.D(P_c[34])
);
// @11:83
  HARD_MULT_ADDSUB_C0_HARD_MULT_ADDSUB_C0_0_HARD_MULT_ADDSUB HARD_MULT_ADDSUB_C0_0 (
	.C_c(C_c[34:0]),
	.B0_c(B0_c[8:0]),
	.B1_c(B1_c[8:0]),
	.A1_c(A1_c[8:0]),
	.A0_c(A0_c[8:0]),
	.P_c(P_c[34:0]),
	.CDOUT_c(CDOUT_c[43:0])
);
  GND GND_Z (
	.Y(GND)
);
  VCC VCC_Z (
	.Y(VCC)
);
endmodule /* HARD_MULT_ADDSUB_C0 */

